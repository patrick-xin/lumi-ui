/* eslint-disable @typescript-eslint/ban-ts-comment */
  /* eslint-disable @typescript-eslint/no-explicit-any */
  // @ts-nocheck
  // This file is autogenerated by scripts/build-registry.ts
  // Do not edit this file directly.

import React from "react";
import type { ComponentRegistry } from "./__registry";

export const components: ComponentRegistry = {
  "utils": {
    name: "utils",
    description: "",
    type: "registry:lib",
    registryDependencies: ["clsx","tailwind-merge"],
    files:     [
          {
                "path": "registry/lib/utils.ts",
                "type": "registry:lib",
                "target": ""
          }
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/lib/utils");
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "utils";
      return { default: mod.default || mod[exportName] };
    }),
    categories: undefined,
    meta: undefined,
  },
  "accordion": {
    name: "accordion",
    description: "",
    type: "registry:ui",
    registryDependencies: ["@base-ui-components/react"],
    files:     [
          {
                "path": "registry/ui/accordion.tsx",
                "type": "registry:ui",
                "target": ""
          }
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ui/accordion");
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "accordion";
      return { default: mod.default || mod[exportName] };
    }),
    categories: undefined,
    meta: undefined,
  },
  "accordion-demo": {
    name: "accordion-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["accordion"],
    files: [{
      path: "components/examples/accordion-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/components/examples/accordion-demo");
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "accordion-demo";
      return { default: mod.default || mod[exportName] };
    }),
    categories: undefined,
    meta: undefined,
  }
};
