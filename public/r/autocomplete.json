{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "autocomplete",
  "type": "registry:ui",
  "title": "Autocomplete",
  "description": "An input that suggests options as you type.",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/ui/autocomplete.tsx",
      "content": "\"use client\";\n\nimport { Autocomplete as AutocompletePrimitive } from \"@base-ui-components/react/autocomplete\";\nimport { SearchIcon, X } from \"lucide-react\";\nimport type * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nconst Autocomplete = AutocompletePrimitive.Root;\n\nfunction AutocompleteInput({\n  className,\n  showSearchIcon = false,\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.Input> & {\n  showSearchIcon?: boolean;\n}) {\n  return (\n    <div\n      className=\"relative flex items-center\"\n      data-slot=\"command-input-wrapper\"\n    >\n      {showSearchIcon && (\n        <SearchIcon className=\"absolute left-3 top-1/2 -translate-y-1/2 size-4 shrink-0 opacity-50\" />\n      )}\n      <AutocompletePrimitive.Input\n        className={cn(\n          \"h-9 w-full min-w-0 rounded-md border border-input bg-transparent py-1 text-base shadow-xs\",\n          \"placeholder:text-muted-foreground\",\n          \"selection:bg-primary selection:text-primary-foreground\",\n          \"dark:bg-input/30\",\n          \"disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[2px] focus-visible:outline-none\",\n          \"transition-[color,box-shadow]\",\n          showSearchIcon ? \"pl-9 pr-3\" : \"px-3\",\n          className,\n        )}\n        data-slot=\"autocomplete-input\"\n        {...props}\n      />\n    </div>\n  );\n}\n\nfunction AutocompletePortal({\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.Portal>) {\n  return (\n    <AutocompletePrimitive.Portal data-slot=\"autocomplete-portal\" {...props} />\n  );\n}\n\nfunction AutocompletePositioner({\n  className,\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.Positioner>) {\n  return (\n    <AutocompletePrimitive.Positioner\n      data-slot=\"autocomplete-positioner\"\n      className={cn(\"outline-none\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompletePopup({\n  children,\n  classNames,\n  align = \"center\",\n  alignOffset = 0,\n  side = \"bottom\",\n  sideOffset = 5,\n  matchAnchorWidth = true,\n  ...props\n}: Omit<\n  React.ComponentProps<typeof AutocompletePrimitive.Popup>,\n  \"className\"\n> & {\n  align?: AutocompletePrimitive.Positioner.Props[\"align\"];\n  alignOffset?: AutocompletePrimitive.Positioner.Props[\"alignOffset\"];\n  side?: AutocompletePrimitive.Positioner.Props[\"side\"];\n  sideOffset?: AutocompletePrimitive.Positioner.Props[\"sideOffset\"];\n  classNames?: {\n    backdrop?: string;\n    popup?: string;\n    positioner?: string;\n  };\n  matchAnchorWidth?: boolean;\n}) {\n  return (\n    <AutocompletePortal>\n      <AutocompleteBackdrop className={cn(classNames?.backdrop)} />\n      <AutocompletePositioner\n        align={align}\n        alignOffset={alignOffset}\n        side={side}\n        sideOffset={sideOffset}\n        className={cn(classNames?.positioner)}\n      >\n        <AutocompletePrimitive.Popup\n          data-slot=\"autocomplete-popup\"\n          className={cn(\n            \"px-1 py-2 rounded-md bg-popover border border-input\",\n            \"max-h-[min(var(--available-height),23rem)] max-w-[var(--available-width)]\",\n            \"overflow-y-auto scroll-pt-2 scroll-pb-2 overscroll-contain\",\n            \"origin-[var(--transform-origin)] transition-[transform,scale,opacity] duration-100\",\n            \"data-[starting-style]:opacity-0\",\n            \"data-[ending-style]:opacity-0\",\n            classNames?.popup,\n            matchAnchorWidth && \"w-[var(--anchor-width)]\",\n          )}\n          {...props}\n        >\n          {children}\n        </AutocompletePrimitive.Popup>\n      </AutocompletePositioner>\n    </AutocompletePortal>\n  );\n}\n\nfunction AutocompleteEmpty({\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.Empty>) {\n  return (\n    <AutocompletePrimitive.Empty\n      data-slot=\"autocomplete-empty\"\n      className=\"px-2 py-1 text-sm empty:m-0 empty:p-0\"\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteList({\n  className,\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.List>) {\n  return (\n    <AutocompletePrimitive.List\n      className={cn(\"space-y-1.5\", className)}\n      data-slot=\"autocomplete-list\"\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteItem({\n  className,\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.Item>) {\n  return (\n    <AutocompletePrimitive.Item\n      data-slot=\"autocomplete-item\"\n      className={cn(\n        \"relative flex items-center gap-2 rounded-sm cursor-default px-2 py-1 text-base outline-none select-none\",\n        \"transition-[color,box-shadow]\",\n        \"data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground\",\n        \"[&_svg:not([class*='text-'])]:text-muted-foreground [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        \"data-[disabled=true]:pointer-events-none data-[disabled=true]:opacity-50\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteValue({\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.Value>) {\n  return (\n    <AutocompletePrimitive.Value data-slot=\"autocomplete-value\" {...props} />\n  );\n}\n\nfunction AutocompleteControl({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <span\n      data-slot=\"autocomplete-control\"\n      className={cn(\"relative\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteTrigger({\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.Trigger>) {\n  return (\n    <AutocompletePrimitive.Trigger\n      data-slot=\"autocomplete-trigger\"\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteIcon({\n  className,\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.Icon>) {\n  return (\n    <AutocompletePrimitive.Icon\n      data-slot=\"autocomplete-icon\"\n      className={cn(\"h-4 w-4 opacity-50\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteStatus({\n  className,\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.Status>) {\n  return (\n    <AutocompletePrimitive.Status\n      data-slot=\"autocomplete-status\"\n      className={cn(\n        \"px-2 py-1.5 text-sm text-muted-foreground empty:m-0 empty:p-0\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteBackdrop({\n  className,\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.Backdrop>) {\n  return (\n    <AutocompletePrimitive.Backdrop\n      data-slot=\"autocomplete-backdrop\"\n      className={cn(className)}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteCollection({\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.Collection>) {\n  return (\n    <AutocompletePrimitive.Collection\n      data-slot=\"autocomplete-collection\"\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteRow({\n  className,\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.Row>) {\n  return (\n    <AutocompletePrimitive.Row\n      data-slot=\"autocomplete-row\"\n      className={cn(\"flex items-center gap-2\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteClear({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.Clear>) {\n  return (\n    <AutocompletePrimitive.Clear\n      data-slot=\"autocomplete-clear\"\n      className={cn(\n        \"absolute cursor-pointer top-1/2 -translate-y-1/2 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100\",\n        \"focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none\",\n        \"data-[disabled]:pointer-events-none\",\n        className,\n      )}\n      {...props}\n    >\n      {children ? children : <X className=\"size-3.5\" />}\n    </AutocompletePrimitive.Clear>\n  );\n}\n\nfunction AutocompleteArrow({\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.Arrow>) {\n  return (\n    <AutocompletePrimitive.Arrow data-slot=\"autocomplete-arrow\" {...props} />\n  );\n}\n\nfunction AutocompleteGroup({\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.Group>) {\n  return (\n    <AutocompletePrimitive.Group\n      data-slot=\"autocomplete-group\"\n      className=\"space-y-1.5\"\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteGroupLabel({\n  sticky = false,\n  className,\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.GroupLabel> & {\n  sticky?: boolean;\n}) {\n  return (\n    <AutocompletePrimitive.GroupLabel\n      data-slot=\"autocomplete-group-label\"\n      className={cn(\n        \"px-2 py-1.5 text-sm text-muted-foreground\",\n        sticky && \"sticky top-0 z-10 bg-popover\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteSeparator({\n  ...props\n}: React.ComponentProps<typeof AutocompletePrimitive.Separator>) {\n  return (\n    <AutocompletePrimitive.Separator\n      data-slot=\"autocomplete-separator\"\n      {...props}\n    />\n  );\n}\n\nexport {\n  Autocomplete,\n  AutocompleteControl,\n  AutocompleteValue,\n  AutocompleteTrigger,\n  AutocompleteInput,\n  AutocompleteIcon,\n  AutocompleteStatus,\n  AutocompletePortal,\n  AutocompleteBackdrop,\n  AutocompletePositioner,\n  AutocompletePopup,\n  AutocompleteList,\n  AutocompleteCollection,\n  AutocompleteRow,\n  AutocompleteItem,\n  AutocompleteGroup,\n  AutocompleteGroupLabel,\n  AutocompleteEmpty,\n  AutocompleteClear,\n  AutocompleteArrow,\n  AutocompleteSeparator,\n};\n",
      "type": "registry:ui"
    }
  ]
}