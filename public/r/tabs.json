{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "tabs",
  "type": "registry:ui",
  "title": "Tabs",
  "description": "A component for toggling between related panels on the same page.",
  "dependencies": [
    "class-variance-authority"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/ui/tabs.tsx",
      "content": "\"use client\";\n\nimport { Tabs as TabsPrimitive } from \"@base-ui-components/react/tabs\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst tabsListVariants = cva(\n  \"relative p-[3px] z-0 flex w-fit h-full items-center justify-center text-muted-foreground data-[orientation=vertical]:flex-col\",\n  {\n    variants: {\n      variant: {\n        pill: \"gap-1 rounded-md bg-accent dark:bg-accent/50 text-accent-foreground data-[orientation=vertical]:py-1.5 data-[orientation=vertical]:px-1\",\n        underline:\n          \"gap-4 p-0 bg-transparent border-b data-[orientation=vertical]:border-b-0 data-[orientation=vertical]:border-l\",\n        ghost: \"gap-3 bg-transparent\",\n        solid:\n          \"gap-1 rounded-md bg-card data-[orientation=vertical]:gap-1.5 data-[orientation=vertical]:px-2 data-[orientation=vertical]:py-1.5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"pill\",\n    },\n  },\n);\n\nconst tabIndicatorVariants = cva(\n  \"absolute z-0 w-(--active-tab-width) h-(--active-tab-height) transition-all duration-300 ease-in-out translate-x-1/2 -translate-y-(--active-tab-bottom)\",\n  {\n    variants: {\n      variant: {\n        pill: \"rounded-md border border-ring/70 bg-accent/70 shadow-sm dark:border-input top-1/2 -translate-y-1/2 left-0 data-[orientation=vertical]:left-1/2 data-[orientation=vertical]:-translate-x-1/2 data-[orientation=vertical]:top-0 data-[orientation=vertical]:translate-y-(--active-tab-top)\",\n        underline:\n          \"bg-foreground bottom-0 left-0 h-0.5 translate-x-(--active-tab-left) data-[orientation=vertical]:bottom-auto data-[orientation=vertical]:left-0 data-[orientation=vertical]:h-(--active-tab-height) data-[orientation=vertical]:w-0.5 data-[orientation=vertical]:translate-x-0 data-[orientation=vertical]:top-(--active-tab-top) data-[orientation=vertical]:translate-y-0 data-[orientation=vertical]:-start-[calc(--spacing(1)-0.5px)]\",\n        ghost:\n          \"bg-transparent top-1/2 -translate-y-1/2 left-0 translate-x-(--active-tab-left) data-[orientation=vertical]:left-1/2 data-[orientation=vertical]:-translate-x-1/2 data-[orientation=vertical]:top-0 data-[orientation=vertical]:translate-y-(--active-tab-top)\",\n        solid:\n          \"hidden pointer-events-none w-0 h-0 translate-x-0 -translate-y-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"pill\",\n    },\n  },\n);\n\ntype TabsContextValue = {\n  variant: VariantProps<typeof tabsListVariants>[\"variant\"];\n};\n\nconst TabsContext = React.createContext<TabsContextValue | undefined>(\n  undefined,\n);\n\nfunction useTabsContext() {\n  const context = React.useContext(TabsContext);\n  if (!context) {\n    throw new Error(\"Tabs components must be used within <Tabs>\");\n  }\n  return context;\n}\n\nfunction Tabs({\n  className,\n  variant = \"pill\",\n  orientation = \"horizontal\",\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root> &\n  VariantProps<typeof tabsListVariants> & {\n    orientation?: \"horizontal\" | \"vertical\";\n  }) {\n  return (\n    <TabsContext.Provider value={{ variant }}>\n      <TabsPrimitive.Root\n        data-slot=\"tabs\"\n        orientation={orientation}\n        className={cn(\n          \"flex gap-2 flex-col data-[orientation=vertical]:flex-row\",\n          className,\n        )}\n        {...props}\n      />\n    </TabsContext.Provider>\n  );\n}\n\nfunction TabsList({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  const { variant } = useTabsContext();\n\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        tabsListVariants({ variant }),\n        \"data-[orientation=horizontal]:flex-row data-[orientation=vertical]:flex-col\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <TabIndicator />\n    </TabsPrimitive.List>\n  );\n}\n\nfunction TabsTab({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Tab>) {\n  const { variant } = useTabsContext();\n\n  return (\n    <TabsPrimitive.Tab\n      data-slot=\"tabs-tab\"\n      className={cn(\n        \"relative z-[1] inline-flex items-center justify-center gap-1.5 outline-none\",\n        \"rounded-md px-2 py-1\",\n        \"text-sm font-medium text-nowrap whitespace-nowrap text-muted-foreground hover:text-foreground\",\n        \"transition-colors duration-200 ease-in\",\n        \"focus-visible:ring-[3px] focus-visible:ring-ring/50\",\n        \"data-[selected]:text-foreground\",\n        \"data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        \"[&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        \"data-[orientation=horizontal]:flex-1 data-[orientation=vertical]:w-full data-[orientation=vertical]:justify-start\",\n        variant === \"solid\" && \"hover:bg-accent data-[selected]:bg-accent/70\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TabIndicator({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Indicator>) {\n  const { variant } = useTabsContext();\n\n  return (\n    <TabsPrimitive.Indicator\n      data-slot=\"tab-indicator\"\n      className={cn(tabIndicatorVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nfunction TabsPanel({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Panel>) {\n  return (\n    <TabsPrimitive.Panel\n      data-slot=\"tabs-panel\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  );\n}\n\nexport { Tabs, TabsList, TabsTab, TabsPanel };\n",
      "type": "registry:ui"
    }
  ]
}