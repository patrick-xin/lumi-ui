{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "tabs",
  "type": "registry:ui",
  "title": "Tabs",
  "description": "A component for toggling between related panels on the same page.",
  "dependencies": [
    "class-variance-authority"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/ui/tabs.tsx",
      "content": "\"use client\";\n\nimport { Tabs as TabsPrimitive } from \"@base-ui-components/react/tabs\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst tabsListVariants = cva(\n  \"relative z-0 h-9 inline-flex gap-1 w-fit items-center justify-center text-muted-foreground p-[3px]\",\n  {\n    variants: {\n      variant: {\n        pill: \"rounded-md bg-muted\",\n        underline: \"border-b bg-transparent gap-4 p-0\",\n        ghost: \"bg-transparent gap-3\",\n        solid: \"bg-card rounded-md\",\n      },\n    },\n    defaultVariants: {\n      variant: \"pill\",\n    },\n  },\n);\n\nconst tabIndicatorVariants = cva(\n  \"absolute left-0 z-0 w-[var(--active-tab-width)] translate-x-[var(--active-tab-left)] transition-all duration-300 ease-in-out\",\n  {\n    variants: {\n      variant: {\n        pill: \"top-1/2 -translate-y-1/2 h-[var(--active-tab-height)] rounded-md border border-ring/70 bg-input/70 shadow-sm dark:border-input\",\n        underline: \"bottom-0 h-0.5 bg-foreground\",\n        ghost:\n          \"top-1/2 -translate-y-1/2 h-[var(--active-tab-height)] bg-transparent\",\n        solid:\n          \"hidden pointer-events-none h-[var(--active-tab-height)] w-[var(--active-tab-width)]\",\n      },\n    },\n    defaultVariants: {\n      variant: \"pill\",\n    },\n  },\n);\n\ntype TabsContextValue = {\n  variant: VariantProps<typeof tabsListVariants>[\"variant\"];\n};\n\nconst TabsContext = React.createContext<TabsContextValue | undefined>(\n  undefined,\n);\n\nfunction useTabsContext() {\n  const context = React.useContext(TabsContext);\n  if (!context) {\n    throw new Error(\"Tabs components must be used within <Tabs>\");\n  }\n  return context;\n}\n\nfunction Tabs({\n  className,\n  variant = \"pill\",\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root> &\n  VariantProps<typeof tabsListVariants>) {\n  return (\n    <TabsContext.Provider value={{ variant }}>\n      <TabsPrimitive.Root\n        data-slot=\"tabs\"\n        className={cn(\"flex flex-col gap-2\", className)}\n        {...props}\n      />\n    </TabsContext.Provider>\n  );\n}\n\nfunction TabsList({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  const { variant } = useTabsContext();\n\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(tabsListVariants({ variant }), className)}\n      {...props}\n    >\n      {children}\n      <TabIndicator />\n    </TabsPrimitive.List>\n  );\n}\n\nfunction TabsTab({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Tab>) {\n  const { variant } = useTabsContext();\n  return (\n    <TabsPrimitive.Tab\n      data-slot=\"tabs-tab\"\n      className={cn(\n        \"relative z-[1] inline-flex flex-1 items-center justify-center gap-1.5 outline-none\",\n        \"rounded-md px-2 py-1\",\n        \"text-sm font-medium text-nowrap whitespace-nowrap text-muted-foreground  hover:text-foreground\",\n        \"transition-colors duration-200 ease-in\",\n        \"focus-visible:ring-[3px] focus-visible:ring-ring/50\",\n        \"data-[selected]:text-foreground\",\n        \"data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        \"[&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        variant === \"solid\" && \"hover:bg-muted data-[selected]:bg-input/70\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TabIndicator({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Indicator>) {\n  const { variant } = useTabsContext();\n\n  return (\n    <TabsPrimitive.Indicator\n      data-slot=\"tab-indicator\"\n      className={cn(tabIndicatorVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nfunction TabsPanel({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Panel>) {\n  return (\n    <TabsPrimitive.Panel\n      data-slot=\"tabs-panel\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  );\n}\n\nexport { Tabs, TabsList, TabsTab, TabsPanel };\n",
      "type": "registry:ui"
    }
  ]
}