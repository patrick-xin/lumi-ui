{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "menu",
  "type": "registry:ui",
  "title": "Menu",
  "description": "A list of actions in a dropdown, enhanced with keyboard navigation.",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/ui/menu.tsx",
      "content": "\"use client\";\n\nimport { Menu as MenuPrimitive } from \"@base-ui-components/react/menu\";\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from \"lucide-react\";\nimport type * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Menu({ ...props }: React.ComponentProps<typeof MenuPrimitive.Root>) {\n  return <MenuPrimitive.Root data-slot=\"menu\" {...props} />;\n}\n\nfunction MenuPortal({\n  ...props\n}: React.ComponentProps<typeof MenuPrimitive.Portal>) {\n  return <MenuPrimitive.Portal data-slot=\"menu-portal\" {...props} />;\n}\n\nfunction MenuTrigger({\n  ...props\n}: React.ComponentProps<typeof MenuPrimitive.Trigger>) {\n  return <MenuPrimitive.Trigger data-slot=\"menu-trigger\" {...props} />;\n}\n\ntype MenuPopupProps = React.ComponentProps<typeof MenuPrimitive.Popup> & {\n  side?: React.ComponentProps<typeof MenuPrimitive.Positioner>[\"side\"];\n  sideOffset?: React.ComponentProps<\n    typeof MenuPrimitive.Positioner\n  >[\"sideOffset\"];\n  align?: React.ComponentProps<typeof MenuPrimitive.Positioner>[\"align\"];\n  alignOffset?: React.ComponentProps<\n    typeof MenuPrimitive.Positioner\n  >[\"alignOffset\"];\n  /**\n   * Whether to display the arrow pointing to the trigger.\n   * @default false\n   */\n  showArrow?: boolean;\n  /**\n   * Whether the menu's width should match the trigger's width.\n   * @default false\n   */\n  matchAnchorWidth?: boolean;\n};\n\nfunction MenuPopup({\n  children,\n  className,\n  align = \"center\",\n  alignOffset = 0,\n  side = \"bottom\",\n  sideOffset = 4,\n  showArrow = false,\n  matchAnchorWidth = false,\n  ...props\n}: MenuPopupProps) {\n  return (\n    <MenuPrimitive.Portal>\n      <MenuPrimitive.Positioner\n        sideOffset={sideOffset}\n        align={align}\n        alignOffset={alignOffset}\n        side={side}\n        className={cn(\n          matchAnchorWidth && \"w-[var(--anchor-width)]\",\n          \"max-h-(--available-height)\",\n        )}\n      >\n        <MenuPrimitive.Popup\n          className={cn(\n            \"p-1 bg-popover text-popover-foreground rounded-md outline outline-border dark:-outline-offset-1 shadow-md\",\n            \"transition-[transform,scale,opacity] origin-[var(--transform-origin)]\",\n            \"data-[starting-style]:scale-90 data-[starting-style]:opacity-0\",\n            \"data-[ending-style]:scale-90 data-[ending-style]:opacity-0\",\n            className,\n          )}\n          {...props}\n        >\n          {showArrow && (\n            <MenuPrimitive.Arrow className=\"data-[side=bottom]:top-[-8px] data-[side=left]:right-[-13px] data-[side=left]:rotate-90 data-[side=right]:left-[-13px] data-[side=right]:-rotate-90 data-[side=top]:bottom-[-8px] data-[side=top]:rotate-180\">\n              <ArrowSvg />\n            </MenuPrimitive.Arrow>\n          )}\n          {children}\n        </MenuPrimitive.Popup>\n      </MenuPrimitive.Positioner>\n    </MenuPrimitive.Portal>\n  );\n}\n\nfunction MenuItem({\n  className,\n  inset,\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<typeof MenuPrimitive.Item> & {\n  inset?: boolean;\n  variant?: \"default\" | \"destructive\";\n}) {\n  return (\n    <MenuPrimitive.Item\n      data-inset={inset}\n      data-variant={variant}\n      data-slot=\"menu-item\"\n      className={cn(\n        \"flex items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none cursor-default\",\n        \"[&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        \"focus:bg-accent focus:text-accent-foreground\",\n        \"data-[disabled]:opacity-50 data-[disabled]:pointer-events-none\",\n        \"data-[inset]:pl-8\",\n        \"data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction MenuSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof MenuPrimitive.Separator>) {\n  return (\n    <MenuPrimitive.Separator\n      data-slot=\"menu-separator\"\n      className={cn(\"bg-border -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction ArrowSvg(props: React.ComponentProps<\"svg\">) {\n  return (\n    <svg width=\"20\" height=\"10\" viewBox=\"0 0 20 10\" fill=\"none\" {...props}>\n      <path\n        d=\"M9.66437 2.60207L4.80758 6.97318C4.07308 7.63423 3.11989 8 2.13172 8H0V10H20V8H18.5349C17.5468 8 16.5936 7.63423 15.8591 6.97318L11.0023 2.60207C10.622 2.2598 10.0447 2.25979 9.66437 2.60207Z\"\n        className=\"fill-popover\"\n      />\n      <path\n        d=\"M8.99542 1.85876C9.75604 1.17425 10.9106 1.17422 11.6713 1.85878L16.5281 6.22989C17.0789 6.72568 17.7938 7.00001 18.5349 7.00001L15.89 7L11.0023 2.60207C10.622 2.2598 10.0447 2.2598 9.66436 2.60207L4.77734 7L2.13171 7.00001C2.87284 7.00001 3.58774 6.72568 4.13861 6.22989L8.99542 1.85876Z\"\n        className=\"fill-border dark:fill-none\"\n      />\n      <path\n        d=\"M10.3333 3.34539L5.47654 7.71648C4.55842 8.54279 3.36693 9 2.13172 9H0V8H2.13172C3.11989 8 4.07308 7.63423 4.80758 6.97318L9.66437 2.60207C10.0447 2.25979 10.622 2.2598 11.0023 2.60207L15.8591 6.97318C16.5936 7.63423 17.5468 8 18.5349 8H20V9H18.5349C17.2998 9 16.1083 8.54278 15.1901 7.71648L10.3333 3.34539Z\"\n        className=\"fill-border\"\n      />\n    </svg>\n  );\n}\n\nfunction MenuSubMenu({\n  ...props\n}: React.ComponentProps<typeof MenuPrimitive.SubmenuRoot>) {\n  return (\n    <MenuPrimitive.SubmenuRoot delay={0} data-slot=\"menu-sub-menu\" {...props} />\n  );\n}\n\nfunction MenuSubMenuPopup({\n  align = \"start\",\n  side = \"right\",\n  sideOffset = 8,\n  alignOffset = -4,\n  ...props\n}: MenuPopupProps) {\n  return (\n    <MenuPopup\n      side={side}\n      sideOffset={sideOffset}\n      align={align}\n      alignOffset={alignOffset}\n      data-slot=\"menu-submenu-popup\"\n      {...props}\n    />\n  );\n}\n\nfunction MenuSubMenuTrigger({\n  children,\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof MenuPrimitive.SubmenuTrigger> & {\n  inset?: boolean;\n}) {\n  return (\n    <MenuPrimitive.SubmenuTrigger\n      data-slot=\"menu-sub-menu-trigger\"\n      data-inset={inset}\n      className={cn(\n        \"flex items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none cursor-default\",\n        \"focus:bg-accent focus:text-accent-foreground\",\n        \"[&_svg:not([class*='text-'])]:text-muted-foreground [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        \"data-[inset]:pl-8\",\n        \"data-[popup-open]:bg-accent data-[popup-open]:text-accent-foreground\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRightIcon className=\"ml-auto size-4\" />\n    </MenuPrimitive.SubmenuTrigger>\n  );\n}\n\nfunction MenuGroup({\n  ...props\n}: React.ComponentProps<typeof MenuPrimitive.Group>) {\n  return <MenuPrimitive.Group data-slot=\"menu-group\" {...props} />;\n}\n\nfunction MenuGroupLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof MenuPrimitive.GroupLabel> & {\n  inset?: boolean;\n}) {\n  return (\n    <MenuPrimitive.GroupLabel\n      data-inset={inset}\n      className={cn(\n        \"px-2 py-1.5 text-sm font-medium data-[inset]:pl-8 text-muted-foreground\",\n        className,\n      )}\n      data-slot=\"menu-group-label\"\n      {...props}\n    />\n  );\n}\n\nfunction MenuRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenuPrimitive.RadioGroup>) {\n  return <MenuPrimitive.RadioGroup data-slot=\"menu-radio-group\" {...props} />;\n}\n\nfunction MenuRadioItem({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<typeof MenuPrimitive.RadioItem>) {\n  return (\n    <MenuPrimitive.RadioItem\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className,\n      )}\n      {...props}\n      data-slot=\"menu-radio-item\"\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <MenuPrimitive.RadioItemIndicator>\n          <CircleIcon className=\"size-2 fill-current\" />\n        </MenuPrimitive.RadioItemIndicator>\n      </span>\n      {children}\n    </MenuPrimitive.RadioItem>\n  );\n}\n\nfunction MenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof MenuPrimitive.CheckboxItem>) {\n  return (\n    <MenuPrimitive.CheckboxItem\n      data-slot=\"menu-checkbox-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className,\n      )}\n      checked={checked}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <MenuPrimitive.CheckboxItemIndicator>\n          <CheckIcon className=\"size-3.5\" />\n        </MenuPrimitive.CheckboxItemIndicator>\n      </span>\n      {children}\n    </MenuPrimitive.CheckboxItem>\n  );\n}\n\nfunction MenuShortcut({ className, ...props }: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"dropdown-menu-shortcut\"\n      className={cn(\n        \"text-muted-foreground ml-auto text-xs tracking-widest\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Menu,\n  MenuPortal,\n  MenuTrigger,\n  MenuPopup,\n  MenuItem,\n  MenuGroup,\n  MenuGroupLabel,\n  MenuCheckboxItem,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuSeparator,\n  MenuSubMenu,\n  MenuSubMenuTrigger,\n  MenuSubMenuPopup,\n  MenuShortcut,\n};\n",
      "type": "registry:ui"
    }
  ]
}